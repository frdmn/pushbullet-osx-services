<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>409</string>
	<key>AMApplicationVersion</key>
	<string>2.5</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>2.0.3</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>COMMAND_STRING</key>
					<dict/>
					<key>CheckedForUserDefaultShell</key>
					<dict/>
					<key>inputMethod</key>
					<dict/>
					<key>shell</key>
					<dict/>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run Shell Script.action</string>
				<key>ActionName</key>
				<string>Shell-Skript ausführen</string>
				<key>ActionParameters</key>
				<dict>
					<key>COMMAND_STRING</key>
					<string># Set variables
COMPUTERNAME=$(scutil --get LocalHostName)

# Check for API key file
if [[ ! -f ~/.pushbullet_apikey ]]; then
	ERROR="[pushbullet-selection] Error: Couldn't locate API key file \"~/.pushbullet_apikey\""
	echo "${ERROR}" &amp;&amp; syslog -s -l error "${ERROR}"
	exit 1
fi

# Read API key
APIKEY=$(cat ~/.pushbullet_apikey)

# If API key is not 45 characters 
if [[ ${#APIKEY} != 45 ]]; then
	ERROR="[pushbullet-selection] Error: Couldn't find a proper API key (45 characters) in \"~/.pushbullet_apikey\""
	echo "${ERROR}" &amp;&amp; syslog -s -l error "${ERROR}"
	exit 1
fi

# For each selected file
for f in "$@"
do
	FILENAME=$(basename ${f})
	MIMETYPE=$(file --mime-type "${f}" | awk '{ print $2 }')

	# Request upload and store authorization keys
	REQUESTUPLOAD=$(curl \
		-u ${APIKEY}: \
		-X POST https://api.pushbullet.com/v2/upload-request \
		-d file_name=${FILENAME} \
		-d file_type=${MIMETYPE})

	FILEURL=$(echo $REQUESTUPLOAD | python -c 'import json,sys;obj=json.load(sys.stdin);print obj["file_url"]')
	AWSKEY=$(echo $REQUESTUPLOAD | python -c 'import json,sys;obj=json.load(sys.stdin);print obj["data"]["awsaccesskeyid"]')
	ACL=$(echo $REQUESTUPLOAD | python -c 'import json,sys;obj=json.load(sys.stdin);print obj["data"]["acl"]')
	KEY=$(echo $REQUESTUPLOAD | python -c 'import json,sys;obj=json.load(sys.stdin);print obj["data"]["key"]')
	SIGNATURE=$(echo $REQUESTUPLOAD | python -c 'import json,sys;obj=json.load(sys.stdin);print obj["data"]["signature"]')
	POLICY=$(echo $REQUESTUPLOAD | python -c 'import json,sys;obj=json.load(sys.stdin);print obj["data"]["policy"]')
	CONTENTTYPE=$(echo $REQUESTUPLOAD | python -c 'import json,sys;obj=json.load(sys.stdin);print obj["data"]["content-type"]')
	
	# Fire upoad request
	curl -i -X POST https://s3.amazonaws.com/pushbullet-uploads \
	  	-F awsaccesskeyid=${AWSKEY} \
	  	-F acl=${ACL} \
	  	-F key=${KEY} \
	  	-F signature=${SIGNATURE} \
	  	-F policy=${POLICY} \
	  	-F content-type=${CONTENTTYPE} \
	  	-F file=@${f}

	# Fire push request
	curl \
		-u ${APIKEY}: \
		-X POST https://api.pushbullet.com/v2/pushes \
		--header 'Content-Type: application/json' \
		--data-binary '{"type": "file", "file_name": "'${FILENAME}'", "file_type": "'${MIMETYPE}'", "file_url": "'${FILEURL}'", "body": "Sent from '${COMPUTERNAME}'"}'

done
</string>
					<key>CheckedForUserDefaultShell</key>
					<true/>
					<key>inputMethod</key>
					<integer>1</integer>
					<key>shell</key>
					<string>/bin/bash</string>
					<key>source</key>
					<string></string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.RunShellScript</string>
				<key>CFBundleVersion</key>
				<string>2.0.3</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunShellScriptAction</string>
				<key>InputUUID</key>
				<string>8E3DE1A9-431B-4102-8745-088B04B9FB60</string>
				<key>Keywords</key>
				<array>
					<string>Shell</string>
					<string>Skript</string>
					<string>Befehl</string>
					<string>Ausführen</string>
					<string>Unix</string>
				</array>
				<key>OutputUUID</key>
				<string>B9EEF32C-726D-474F-93A4-F43F38A2480B</string>
				<key>UUID</key>
				<string>2D6AF59D-6E1A-441D-B9A2-EF9A7CB255EF</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<integer>0</integer>
						<key>name</key>
						<string>inputMethod</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
					<key>1</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>1</string>
					</dict>
					<key>2</key>
					<dict>
						<key>default value</key>
						<false/>
						<key>name</key>
						<string>CheckedForUserDefaultShell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>2</string>
					</dict>
					<key>3</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>COMMAND_STRING</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>3</string>
					</dict>
					<key>4</key>
					<dict>
						<key>default value</key>
						<string>/bin/sh</string>
						<key>name</key>
						<string>shell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>4</string>
					</dict>
				</dict>
				<key>conversionLabel</key>
				<integer>0</integer>
				<key>isViewVisible</key>
				<true/>
				<key>location</key>
				<string>416.000000:433.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run Shell Script.action/Contents/Resources/German.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<true/>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>workflowMetaData</key>
	<dict>
		<key>serviceInputTypeIdentifier</key>
		<string>com.apple.Automator.fileSystemObject.image</string>
		<key>serviceOutputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceProcessesInput</key>
		<integer>0</integer>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.servicesMenu</string>
	</dict>
</dict>
</plist>
